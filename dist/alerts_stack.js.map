{"version":3,"sources":["../src/alerts_stack.jsx"],"names":[],"mappings":";;;;;;;;;;;;qBAAkB,OAAO;;;;0BAC+B,aAAa;;iCACT,oBAAoB;;sBAClE,QAAQ;;;;;AAGtB,IAAM,eAAe,GAAG,SAAlB,eAAe,CAAI,MAAM,EAAE,aAAa,EAAE,WAAW;SAAK,MAAM,CAAC,GAAG,CACxE,UAAC,IAA8C;QAA5C,aAAa,GAAf,IAA8C,CAA5C,aAAa;QAAE,WAAW,GAA5B,IAA8C,CAA7B,WAAW;QAAE,IAAI,GAAlC,IAA8C,CAAhB,IAAI;;QAAK,KAAK,4BAA5C,IAA8C;;iCAExC,aAAa,EACZ,IAAI,KAAK,OAAO,IAAI,WAAW,GAElC,KAAK;AACR,YAAM,EAAE,WAAW;AACnB,aAAO,EAAE,aAAa;;GACtB,CACH;CAAA,CAAC;AACF,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,KAKjB;MAJC,YAAY,GADI,KAKjB,CAJC,YAAY;MACZ,MAAM,GAFU,KAKjB,CAHC,MAAM;MACN,MAAM,GAHU,KAKjB,CAFC,MAAM;MACN,WAAW,GAJK,KAKjB,CADC,WAAW;SAEX;AACE,iBAAa,EAAE,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,WAAW,CAAC,AAAC;AAC5D,aAAS,EAAE,YAAY,AAAC;IACxB;CACH,CAAC;;AAEG,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAI,KAAW,EAAE,MAAM,EAAK;MAAtB,OAAO,GAAT,KAAW,CAAT,OAAO;;kBACP,OAAO,EAAE;;MAA1B,MAAM,aAAN,MAAM;MAAE,IAAI,aAAJ,IAAI;;AACpB,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;AAC7B,MAAM,cAAc,GAAG,SAAjB,cAAc,CAAI,KAAwD;QAAhD,UAAU,GAAlB,KAAwD,CAAtD,IAAI;QAAc,OAAO,GAA3B,KAAwD,CAApC,OAAO;QAAE,WAAW,GAAxC,KAAwD,CAA3B,WAAW;QAAE,KAAK,GAA/C,KAAwD,CAAd,KAAK;QAAE,KAAK,GAAtD,KAAwD,CAAP,KAAK;wBACzE,KAAK;AACR,aAAO,EAAE,UAAU,IAAI,CAAC,oBAAE,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,OAAO;AACpE,WAAK,EAAE,UAAU,IAAI,CAAC,oBAAE,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK;AAC5D,iBAAW,EAAE,UAAU,IAAI,CAAC,oBAAE,KAAK,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,WAAW;;GACpF;;GAED;AACD,QAAM,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;CACtD,CAAC;;;AAEK,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,QAAO,EAAE,OAAO;SAAM;AAC/C,WAAO,EAAE;aAAM,QAAO;KAAA;AACtB,gBAAY,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO;GACrC;CAAC,CAAC;;;qBAEY,4BACb,oCAAmB,QAAQ,CAAC,EAC5B,yBAAQ,UAAU,CAAC,CACpB,CAAC,UAAU,CAAC","file":"alerts_stack.js","sourcesContent":["import React from 'react';\nimport { useDeps, composeAll, composeWithTracker } from 'mantra-core';\nimport { NotificationStack as ReactNotificationStack } from 'react-notification';\nimport _ from 'lodash';\n\n// some aliassing for ReactNotificationStack\nconst transformAlerts = (alerts, defaultStyles, stylesError) => alerts.map(\n  ({ onActionClick, actionLabel, type, ...alert }) => ({\n    ...{\n      ...defaultStyles,\n      ...(type === 'error' && stylesError),\n    },\n    ...alert,\n    action: actionLabel,\n    onClick: onActionClick,\n  }),\n);\nconst AlertStack = ({\n    dismissAlert,\n    alerts,\n    styles,\n    stylesError,\n  }) => (\n    <ReactNotificationStack\n      notifications={transformAlerts(alerts, styles, stylesError)}\n      onDismiss={dismissAlert}\n    />\n  );\n\nexport const composer = ({ context }, onData) => {\n  const { Alerts, i18n } = context();\n  const alerts = Alerts.list();\n  const translateAlert = ({ i18n: shouldI18n, message, actionLabel, title, alert }) => ({\n    ...alert,\n    message: shouldI18n && !_.isNil(message) ? i18n.t(message) : message,\n    title: shouldI18n && !_.isNil(title) ? i18n.t(title) : title,\n    actionLabel: shouldI18n && !_.isNil(actionLabel) ? i18n.t(actionLabel) : actionLabel,\n  })\n  // translate alerts\n  ;\n  onData(null, { alerts: alerts.map(translateAlert) });\n};\n\nexport const depsMapper = (context, actions) => ({\n  context: () => context,\n  dismissAlert: actions.alerts.dismiss,\n});\n\nexport default composeAll(\n  composeWithTracker(composer),\n  useDeps(depsMapper),\n)(AlertStack);\n"]}